package com.in28minutes.rest.webservices.restwebservices.helloworld;

import java.util.Locale;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.MessageSource;
import org.springframework.context.i18n.LocaleContextHolder;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

///Expose Rest API using RestController annotation.
@RestController
public class HelloWorldController {
	
	@Autowired
	private MessageSource messageSource;
	
	//////Give a URI /hello-world to specific method using RequestMapping annotation.
	///Approach 1 - Using RequestMapping annotation
	///@RequestMapping(method = RequestMethod.GET, path = "/hello-world")
	
	///Approach 2 - Using GetMapping annotation
	@GetMapping(path = "hello-world")
	public String helloWorld() {
		
		////return "Hello World" string
		return "Hello World";
	}
	
	////Returning a Bean
	@GetMapping(path = "hello-world-bean")
	public HelloWorldBean helloWorldBean() {
		
		////return Hello World Bean
		return new HelloWorldBean("Hello World");
	}
	
	///Path parameters 
	// /users/{id}/todos/{id} => /users/1/todos/101
	// /hello-world/path-variable/{name} => /hello-world/path-variable/Anudeep
	
	@GetMapping(path = "hello-world/path-variable/{name}")
	public HelloWorldBean helloWorldPathVariable(@PathVariable String name) {
		return new HelloWorldBean(String.format("Hello World, %s", name));
	}
	
	////Internationalization - i18n
	@GetMapping(path = "hello-world-internationalized")
	public String helloWorldInternationalization() {
		
		////Step 1: Define the messages specific to language in messages.properties file in resources
		
		////Step 2: Define Locale from the request header
		Locale locale = LocaleContextHolder.getLocale();
		
		////Step 3: Spring provides Message Source to access the messages defined in messages.properties, Return the messages accessed.
		return messageSource.getMessage("good.morning.message", null, "Default Message", locale);
	}
	

}
